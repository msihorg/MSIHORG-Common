@* BlazorTemplate.Web\Components\Pages\Auth\CompleteProfile.razor *@
@page "/auth/complete-profile"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@attribute [Authorize]
@inject IUserService UserService
@inject NavigationManager NavigationManager
@inject IToastService ToastService
@inject AuthenticationStateProvider AuthStateProvider

<div class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
        <div>
            <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
                Complete Your Profile
            </h2>
            <p class="mt-2 text-center text-sm text-gray-600">
                Please provide some additional information to complete your account setup.
            </p>
        </div>

        <EditForm Model="@profileRequest" OnValidSubmit="HandleSubmit" class="mt-8 space-y-6">
            <DataAnnotationsValidator />

            <div class="rounded-md shadow-sm space-y-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700">First Name</label>
                    <InputText @bind-Value="profileRequest.FirstName"
                               class="mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" />
                    <ValidationMessage For="@(() => profileRequest.FirstName)" class="text-red-500 text-sm" />
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700">Last Name</label>
                    <InputText @bind-Value="profileRequest.LastName"
                               class="mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" />
                    <ValidationMessage For="@(() => profileRequest.LastName)" class="text-red-500 text-sm" />
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700">Username</label>
                    <InputText @bind-Value="profileRequest.Username"
                               class="mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" />
                    <ValidationMessage For="@(() => profileRequest.Username)" class="text-red-500 text-sm" />
                </div>
            </div>

            <div>
                <button type="submit"
                        disabled="@isLoading"
                        class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                    @if (isLoading)
                    {
                        <span class="spinner-border spinner-border-sm mr-1" role="status" aria-hidden="true"></span>
                    }
                    Complete Profile
                </button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private ProfileCompletionRequest profileRequest = new();
    private bool isLoading;
    private string? userId;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        userId = authState.User.FindFirst(ClaimTypes.NameIdentifier)?.Value;

        if (userId == null)
        {
            NavigationManager.NavigateTo("/login");
            return;
        }

        // Pre-fill username with email or phone if available
        var email = authState.User.FindFirst(ClaimTypes.Email)?.Value;
        var phone = authState.User.FindFirst(ClaimTypes.MobilePhone)?.Value;
        profileRequest.Username = email ?? phone ?? "";
    }

    private async Task HandleSubmit()
    {
        if (userId == null) return;

        try
        {
            isLoading = true;
            var result = await UserService.CompleteProfile(userId, profileRequest);

            if (result.IsSuccess)
            {
                ToastService.ShowSuccess("Profile completed successfully!");
                NavigationManager.NavigateTo("/");
            }
            else
            {
                ToastService.ShowError(result.Error ?? "Failed to complete profile.");
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError("An error occurred while saving your profile.");
        }
        finally
        {
            isLoading = false;
        }
    }
}
